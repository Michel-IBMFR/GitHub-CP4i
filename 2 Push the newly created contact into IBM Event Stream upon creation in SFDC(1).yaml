$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        CREATED:
          input-context:
            data: Contact
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options: {}
      connector-type: salesforce
      account-name: Account 1
  action-interfaces:
    action-interface-2:
      type: api-action
      business-object: message
      connector-type: ibmmq
      account-name: Account 1
      actions:
        PUTMSGQUEUE: {}
    action-interface-3:
      type: notification-card
      actions: {}
      options:
        card:
          layout:
            direction: vertical
            style: layoutA
            items:
              - direction: horizontal
                style: header
                items:
                  - style: icon
                    widget_id: icon
                  - direction: vertical
                    items:
                      - style: title
                        widget_id: nameLabel
                      - style: subtitle
                        widget_id: timestamp
              - direction: vertical
                style: content
                items:
                  - widget_id: descriptionLabel
              - style: buttons
                widget_id: btnGrp1
          widgets:
            - id: icon
              widget: icon
            - id: timestamp
              widget: timestamp
            - id: btnGrp1
              widget: buttonGroup
              widget_ids: []
            - id: nameLabel
              widget: text
              binding: description
              value: Mess MQ
            - id: descriptionLabel
              widget: text
              value: ''
        input:
          - variable: Trigger
            $ref: '#/trigger/payload'
    action-interface-4:
      type: notification-card
      actions: {}
      options:
        card:
          layout:
            direction: vertical
            style: layoutA
            items:
              - direction: horizontal
                style: header
                items:
                  - style: icon
                    widget_id: icon
                  - direction: vertical
                    items:
                      - style: title
                        widget_id: nameLabel
                      - style: subtitle
                        widget_id: timestamp
              - direction: vertical
                style: content
                items:
                  - widget_id: descriptionLabel
              - style: buttons
                widget_id: btnGrp1
          widgets:
            - id: icon
              widget: icon
            - id: timestamp
              widget: timestamp
            - id: btnGrp1
              widget: buttonGroup
              widget_ids: []
            - id: nameLabel
              widget: text
              binding: description
              value: Mess EventStreams
            - id: descriptionLabel
              widget: text
              value: ''
        input:
          - variable: Trigger
            $ref: '#/trigger/payload'
    action-interface-1:
      type: api-action
      business-object: post_MLA_Topic_Inject_records_model
      connector-type: UDA.hl5vkgwsg.openapi.Event-Stream-Post
      account-name: Account 1
      actions:
        post_MLA_Topic_Inject_records: {}
    action-interface-5:
      type: api-action
      business-object: request
      connector-type: iiboc
      account-name: Account 1
      actions:
        INVOKEACTION: {}
    action-interface-6:
      type: notification-card
      actions: {}
      options:
        card:
          layout:
            direction: vertical
            style: layoutA
            items:
              - direction: horizontal
                style: header
                items:
                  - style: icon
                    widget_id: icon
                  - direction: vertical
                    items:
                      - style: title
                        widget_id: nameLabel
                      - style: subtitle
                        widget_id: timestamp
              - direction: vertical
                style: content
                items:
                  - widget_id: descriptionLabel
              - style: buttons
                widget_id: btnGrp1
          widgets:
            - id: icon
              widget: icon
            - id: timestamp
              widget: timestamp
            - id: btnGrp1
              widget: buttonGroup
              widget_ids: []
            - id: nameLabel
              widget: text
              binding: description
              value: New notification
            - id: descriptionLabel
              widget: text
              value: '{{$CallableflowInvoke.localEnvironment}}'
        input:
          - variable: Trigger
            $ref: '#/trigger/payload'
          - variable: EventStreamPostPOSTMLATopicInjectrecords
            $ref: >-
              #/block/If/node-output/Event-Stream-Post POST MLA-Topic-Inject
              records/response/payload
          - variable: EventStreamPostPOSTMLATopicInjectrecordsMetadata
            $ref: >-
              #/block/If/node-output/Event-Stream-Post POST MLA-Topic-Inject
              records/response
          - variable: CallableflowInvoke
            $ref: '#/block/If/node-output/Callable flow Invoke/response/payload'
  assemblies:
    assembly-1:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Trigger
                  $ref: '#/trigger/payload'
              branch:
                - condition:
                    '{{$Trigger.LastName}}': Demo
                  execute:
                    - notification:
                        name: Notification
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          mappings: []
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-3'
                    - custom-action:
                        name: IBM MQ Put message to a queue
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        action: PUTMSGQUEUE
                        map:
                          mappings:
                            - msgPayload:
                                template: '{{$Trigger.FirstName}} {{$Trigger.LastName}}'
                            - msgPayloadType:
                                template: Text
                            - queueName:
                                template: mlamq01
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                  completion-action:
                    terminate:
                      info:
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                        message: '"This is just a test"'
                        status-code: 200
              else:
                execute:
                  - notification:
                      name: Notification 2
                      map:
                        $map: 'http://ibm.com/appconnect/map/v1'
                        mappings: []
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-4'
                  - custom-action:
                      name: Event-Stream-Post POST MLA-Topic-Inject records
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-1'
                      action: post_MLA_Topic_Inject_records
                      map:
                        mappings:
                          - param-body:
                              mappings:
                                - message:
                                    template: >-
                                      {{$Trigger.LastName}} 
                                      {{$Trigger.FirstName}}
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                  - custom-action:
                      name: Callable flow Invoke
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-5'
                      action: INVOKEACTION
                      map:
                        mappings:
                          - Application:
                              template: WriteToFile
                          - Endpoint:
                              template: WRITE_TO_FILE
                          - localEnvironment:
                              mappings:
                                - DirectoryName:
                                    template: /tmp
                                - FileName:
                                    template: Account.xml
                          - message:
                              mappings:
                                - firstname:
                                    template: '{{$Trigger.FirstName}}'
                                - lastname:
                                    template: '{{$Trigger.LastName}}'
                        customSchemas:
                          properties.`localEnvironment`:
                            type: object
                            properties:
                              FileName:
                                type: string
                              DirectoryName:
                                type: string
                          properties.`message`:
                            type: object
                            properties:
                              firstname:
                                type: string
                              lastname:
                                type: string
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: EventStreamPostPOSTMLATopicInjectrecords
                            $ref: >-
                              #/block/If/node-output/Event-Stream-Post POST
                              MLA-Topic-Inject records/response/payload
                          - variable: EventStreamPostPOSTMLATopicInjectrecordsMetadata
                            $ref: >-
                              #/block/If/node-output/Event-Stream-Post POST
                              MLA-Topic-Inject records/response
                  - notification:
                      name: Notification 3
                      map:
                        $map: 'http://ibm.com/appconnect/map/v1'
                        mappings: []
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: EventStreamPostPOSTMLATopicInjectrecords
                            $ref: >-
                              #/block/If/node-output/Event-Stream-Post POST
                              MLA-Topic-Inject records/response/payload
                          - variable: EventStreamPostPOSTMLATopicInjectrecordsMetadata
                            $ref: >-
                              #/block/If/node-output/Event-Stream-Post POST
                              MLA-Topic-Inject records/response
                          - variable: CallableflowInvoke
                            $ref: >-
                              #/block/If/node-output/Callable flow
                              Invoke/response/payload
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-6'
                completion-action:
                  terminate:
                    info:
                      input:
                        - variable: Trigger
                          $ref: '#/trigger/payload'
                      message: '"This is just a test"'
                      status-code: 200
              output-schema: {}
  name: 2 Push the newly created contact into IBM Event Stream upon creation in SFDC
models: {}
